#!/bin/bash

GREEN="\033[32m"
RESET="\033[0m"

echo -e "${GREEN}\n\nSetting up Kind cluster...${RESET}"
kind create cluster

echo -e "${GREEN}\n\nInstalling Drasi...${RESET}"
drasi init

echo -e "${GREEN}\n\Install ZipKin...${RESET}"
kubectl create deployment -n drasi-system zipkin --image openzipkin/zipkin
kubectl patch deployment zipkin -n drasi-system \
  --patch '{
    "spec": {
      "template": { 
        "spec": {
          "containers": [{
            "name": "zipkin",
            "env": [{
              "name": "JAVA_OPTS",
              "value": "-Xms1g -Xmx1g"
            }]
          }]
        }
      }
    }
  }'
kubectl wait -n drasi-system --for=condition=available deployment/zipkin --timeout=300s
kubectl expose deployment -n drasi-system zipkin --type ClusterIP --port 9411
kubectl port-forward -n drasi-system svc/zipkin 9411:9411 &

# Deploy the Test Service and wait for it to be available
echo -e "${GREEN}\n\Deploying Test Service...${RESET}"
kubectl apply -n drasi-system -f ./devops/test-service-deployment.yaml
kubectl wait -n drasi-system --for=condition=available deployment/drasi-test-service --timeout=300s

# Forward the Test Service port and configure the Repository, Source, and Reaction
echo -e "${GREEN}\n\nPort forwarding to enable access the Test Service Web API...${RESET}"
kubectl port-forward -n drasi-system services/drasi-test-service 63123:63123 &
sleep 5

echo -e "${GREEN}\n\nAdding Test Repository, Test Source, and Test Reaction...${RESET}"
curl -i -X POST -H "Content-Type: application/json" -d @examples/population/kind_drasi/cfg_repo_az_dev.json http://localhost:63123/test_repos
curl -i -X POST -H "Content-Type: application/json" -d @examples/population/kind_drasi/cfg_source_population.json http://localhost:63123/test_run_host/sources
curl -i -X POST -H "Content-Type: application/json" -d @examples/population/kind_drasi/cfg_reaction_city_population.json http://localhost:63123/test_run_host/reactions

# Create the Test Source Provider and Test Source
echo -e "${GREEN}\n\nRegistering E2ETestService SourceProvider with Drasi...${RESET}"
drasi apply -f ./devops/e2e-test-source-provider.yaml

echo -e "${GREEN}\n\nCreating Drasi Source...${RESET}"
drasi apply -f examples/population/kind_drasi/source.yaml
drasi wait -f examples/population/kind_drasi/source.yaml -t 200

# Create the Continuous Queries
echo -e "${GREEN}\n\nCreating Drasi Continuous Queries...${RESET}"
drasi apply -f examples/population/kind_drasi/query.yaml
drasi wait -f examples/population/kind_drasi/query.yaml -t 200

# drasi watch city-population